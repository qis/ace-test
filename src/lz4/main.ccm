module;
// clang-format off
#include <lz4.h>
// clang-format on
#include <common.hpp>
export module ace;

export namespace ace {

void test()
{
  const auto src = read_file<char>("test.xml");

  std::vector<char> tmp;
  tmp.resize(LZ4_compressBound(static_cast<int>(src.size())));

  auto size = LZ4_compress_default(
    src.data(), tmp.data(), static_cast<int>(src.size()), static_cast<int>(tmp.size()));
  if (size <= 0) {
    throw error{ "Could not compress data." };
  }
  tmp.resize(static_cast<std::size_t>(size));

  std::vector<char> dst;
  dst.resize(src.size());

  size = LZ4_decompress_safe(
    tmp.data(), dst.data(), static_cast<int>(tmp.size()), static_cast<int>(dst.size()));
  if (size <= 0) {
    throw error{ "Could not decompress data." };
  }
  dst.resize(static_cast<std::size_t>(size));

  if (src != dst) {
    throw error{ "Roundtrip failed." };
  }
}

}  // namespace ace
